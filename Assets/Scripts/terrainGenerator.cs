using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class terrainGenerator : MonoBehaviour
{

    //The map that shows the terrain value at each existing coordinate
    private Dictionary<string, float> terrainMap;
    //The y size of a generated section of the map
    public int chunkSizeY;
    //The x size of a generated section of the map
    public int chunkSizeX;

    //A multiplier that determines the amount of water generated by the perlin noise function
    public float waterAmount;

    public GameObject Water;

    public GameObject Grass;

    //Each terrain set to its specific integer value
    private static int GRASS = 1;
    private static int WATER = 2;
    private static int DIRT = 3;
    private static int SNOW = 4;

    // Use this for initialization
    void Start()
    {
        terrainMap = new Dictionary<string, float>();
        System.Random randomNum = new System.Random();
        for (int y = 0; y < chunkSizeY; y++)
        {
            for (int x = 0; x < chunkSizeX; x++)
            {
                float xNoiseValue = x;
                float yNoiseValue = y;
                terrainMap.Add(x +" " + y, Mathf.PerlinNoise(xNoiseValue, yNoiseValue)*waterAmount);
                //print(Mathf.PerlinNoise(xNoiseValue, yNoiseValue));
            }
        }




        for (int y = 0; y < chunkSizeY; y++)
        {
            for (int x = 0; x < chunkSizeX; x++)
            {
                
                float temp = terrainMap[x +" "+y];
                if (temp < 0.3)
                {
                    Instantiate(Water, new Vector3(x, y, 0), Quaternion.identity);
                }
                else
                {
                    Instantiate(Grass, new Vector3(x, y, 0), Quaternion.identity);
                }

            }
        }
    }

    // Update is called once per frame
    void Update()
    {

    }
}
